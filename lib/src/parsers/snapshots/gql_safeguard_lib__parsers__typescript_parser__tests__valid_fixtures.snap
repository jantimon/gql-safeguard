---
source: lib/src/parsers/typescript_parser.rs
expression: result
---
File: fixtures/valid/fragment_level_catch.ts
GraphQL strings found: 2

=== GraphQL String 1 ===
BytePos: 58
Content:

  fragment RiskyUserData on User @catch {
    sensitiveInfo @throwOnFieldError
    backupEmail @throwOnFieldError
    internalId
  }


=== GraphQL String 2 ===
BytePos: 233
Content:

  query GetUserWithRiskyData($id: ID!) @catch{
    user(id: $id) {
      id
      name
      friends @throwOnFieldError {
        ...RiskyUserData
      }
    }
  }


---

File: fixtures/valid/nested_fragments_protected.ts
GraphQL strings found: 6

=== GraphQL String 1 ===
BytePos: 58
Content:

  fragment UserBasicInfo on User {
    id
    name
    email
  }


=== GraphQL String 2 ===
BytePos: 158
Content:

  fragment avatarImage on User @throwOnFieldError {
    avatar
    avatarUrl
  }


=== GraphQL String 3 ===
BytePos: 268
Content:

  fragment UserAvatar on User @catch {
    avatar
    ...avatarImage
  }


=== GraphQL String 4 ===
BytePos: 367
Content:

  fragment UserBio on User {
    bioText
    bioImage @throwOnFieldError
  }


=== GraphQL String 5 ===
BytePos: 474
Content:

  fragment UserDetails on User {
    ...UserBasicInfo
    ...UserAvatar
    details @catch(to: NULL){
      bio @throwOnFieldError {
        ...UserBio
      }
    }
  }


=== GraphQL String 6 ===
BytePos: 675
Content:

  query GetFullUser($id: ID!) {
    user(id: $id) {
      ...UserDetails
    }
  }


---

File: fixtures/valid/query_with_catch.tsx
GraphQL strings found: 1

=== GraphQL String 1 ===
BytePos: 59
Content:

  query GetUserProfile($id: ID!) @catch {
    user(id: $id) {
      id
      name
      avatar @throwOnFieldError
      email
    }
  }
