---
source: lib/src/parsers/graphql_parser.rs
expression: result
---
File: fixtures/edge_cases/additional-queries.ts
GraphQL AST items: 1

=== AST Item 1 ===
Type: Query
Name: AdditionalQueryEdgeCase
File: fixtures/edge_cases/additional-queries.ts
Directives: 0
Selections: 1
    - Field: user
      - Field: id
      - Field: importedField [ThrowOnFieldError ‚òÑÔ∏è]

---

File: fixtures/edge_cases/additional-queries.ts
GraphQL AST items: 1

=== AST Item 1 ===
Type: Query
Name: GraphQLQuery
File: fixtures/edge_cases/additional-queries.ts
Directives: 1
  - Catch üß§
Selections: 1
    - Field: user
      - Field: id
      - Field: protectedField [ThrowOnFieldError ‚òÑÔ∏è]

---

File: fixtures/edge_cases/circular_fragments.ts
GraphQL AST items: 1

=== AST Item 1 ===
Type: Fragment
Name: FragmentACircular
File: fixtures/edge_cases/circular_fragments.ts
Directives: 0
Type Condition: on User
Selections: 3
    - Field: id
    - Field: name
    - FragmentSpread: FragmentBCircular

---

File: fixtures/edge_cases/circular_fragments.ts
GraphQL AST items: 1

=== AST Item 1 ===
Type: Fragment
Name: FragmentBCircular
File: fixtures/edge_cases/circular_fragments.ts
Directives: 0
Type Condition: on User
Selections: 3
    - Field: email
    - Field: bio
    - FragmentSpread: FragmentACircular

---

File: fixtures/edge_cases/circular_fragments.ts
GraphQL AST items: 1

=== AST Item 1 ===
Type: Query
Name: CircularQueryTest
File: fixtures/edge_cases/circular_fragments.ts
Directives: 0
Selections: 1
    - Field: user
      - FragmentSpread: FragmentACircular

---

File: fixtures/edge_cases/commented_graphql.ts
GraphQL AST items: 1

=== AST Item 1 ===
Type: Query
Name: ValidQueryCommented
File: fixtures/edge_cases/commented_graphql.ts
Directives: 1
  - Catch üß§
Selections: 1
    - Field: user
      - Field: id
      - Field: name
      - Field: avatar [ThrowOnFieldError ‚òÑÔ∏è]

---

File: fixtures/edge_cases/dynamic_imports.tsx
GraphQL AST items: 1

=== AST Item 1 ===
Type: Query
Name: BaseQueryDynamic
File: fixtures/edge_cases/dynamic_imports.tsx
Directives: 1
  - Catch üß§
Selections: 1
    - Field: user
      - Field: id
      - Field: name
      - Field: dynamicField [ThrowOnFieldError ‚òÑÔ∏è]

---

File: fixtures/edge_cases/dynamic_imports.tsx
GraphQL AST items: 1

=== AST Item 1 ===
Type: Query
Name: StaticDynamicQueryEdge
File: fixtures/edge_cases/dynamic_imports.tsx
Directives: 0
Selections: 1
    - Field: user
      - Field: id
      - Field: dynamicField [ThrowOnFieldError ‚òÑÔ∏è]

---

File: /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts
GraphQL Parse Error: GraphQL syntax error in /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts at position 118: ParseError("Parse error at 5:38\nUnexpected unexpected character '/'\nExpected }\n")
Content: 
  query GetUserLogAction($id: ID!) {
    user(id: $id) {
      id
      name @required(action: LOG)    // Should be ignored - no @catch needed
      email @required(action: THROW) @catch  // Should validate - needs protection
    }
  }


---

File: /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts
GraphQL Parse Error: GraphQL syntax error in /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts at position 441: ParseError("Parse error at 5:38\nUnexpected unexpected character '/'\nExpected }\n")
Content: 
  query GetUserNoAction($id: ID!) {
    user(id: $id) {
      id
      name @required                 // Should be ignored - no action specified
      email @required(action: THROW) @catch  // Should validate
    }
  }


---

File: /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts
GraphQL Parse Error: GraphQL syntax error in /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts at position 752: ParseError("Parse error at 5:38\nUnexpected unexpected character '/'\nExpected }\n")
Content: 
  query GetUserOtherActions($id: ID!) {
    user(id: $id) {
      id
      name @required(action: WARN)   // Should be ignored
      email @required(action: NONE)  // Should be ignored
      bio @required(action: THROW) @catch    // Should validate
    }
  }


---

File: /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts
GraphQL Parse Error: GraphQL syntax error in /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts at position 1095: ParseError("Parse error at 6:40\nUnexpected unexpected character '/'\nExpected }\n")
Content: 
  query GetUserComplex($id: ID!) @catch {
    user(id: $id) {
      id
      profile {
        name @required(action: LOG)    // Should be ignored
        displayName @required(action: THROW)  // Should validate (protected by query @catch)
        avatar @throwOnFieldError      // Should validate (protected by query @catch)
        bio @catch {
          text @required(action: THROW)  // Should validate (protected by bio @catch)
          lastModified @required(action: WARN)  // Should be ignored
        }
      }
    }
  }


---

File: /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts
GraphQL Parse Error: GraphQL syntax error in /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts at position 1698: ParseError("Parse error at 3:38\nUnexpected unexpected character '/'\nExpected }\n")
Content: 
  fragment UserInfo on User {
    name @required(action: LOG)      // Should be ignored
    email @required(action: THROW)   // Should validate when fragment is used
    avatar @throwOnFieldError        // Should validate when fragment is used
  }


---

File: /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts
GraphQL Parse Error: GraphQL syntax error in /Users/jannicklas/Desktop/gql-safeguard/fixtures/edge_cases/required_variants.ts at position 1986: ParseError("Parse error at 5:20\nUnexpected unexpected character '/'\nExpected }\n")
Content: 
  query GetUserWithFragment($id: ID!) {
    user(id: $id) @catch {
      id
      ...UserInfo  // Fragment spreads should inherit protection
    }
  }
