---
source: lib/src/parsers/typescript_parser.rs
expression: result
---
File: fixtures/invalid/missing_catch.tsx
GraphQL strings found: 1

=== GraphQL String 1 ===
Line: 3
Content:

  query GetUserProfileUnprotected($id: ID!) {
    user(id: $id) {
      id
      name
      avatar @throwOnFieldError
      email
    }
  }


---

File: fixtures/invalid/partial_protection.ts
GraphQL strings found: 3

=== GraphQL String 1 ===
Line: 3
Content:

  fragment ProtectedFragment on User @catch {
    sensitiveData @throwOnFieldError
    otherData
  }


=== GraphQL String 2 ===
Line: 10
Content:

  fragment UnprotectedFragment on User {
    riskyField @throwOnFieldError
    normalField
  }


=== GraphQL String 3 ===
Line: 17
Content:

  query MixedQuery($id: ID!) {
    user(id: $id) {
      id
      ...ProtectedFragment
      ...UnprotectedFragment
    }
  }


---

File: fixtures/invalid/query_level_throw_with_ignore.ts
GraphQL strings found: 3

=== GraphQL String 1 ===
Line: 6
Content:

  query queryLevelThrowWithIgnore($groupId: ID!)
  @throwOnFieldError
  @raw_response_type {
    customerOrderProductLineItemsGroupById(id: $groupId)
      # gql-safeguard-ignore
      @required(action: THROW) {
      startWrongDeliveryRegistrationRelativeUrl
    }
  }


=== GraphQL String 2 ===
Line: 19
Content:

  query unprotectedQueryLevelThrow($id: ID!)
  @throwOnFieldError {
    user(id: $id) {
      id
      name
      email
    }
  }


=== GraphQL String 3 ===
Line: 31
Content:

  # gql-safeguard-ignore
  query queryLevelThrowWithQueryIgnore($id: ID!)
  @throwOnFieldError {
    user(id: $id) {
      id
      name
    }
  }


---

File: fixtures/invalid/unprotected_nested.ts
GraphQL strings found: 4

=== GraphQL String 1 ===
Line: 3
Content:

  fragment UserBasicInfoUnprotected on User {
    id
    name @throwOnFieldError
    email
  }


=== GraphQL String 2 ===
Line: 11
Content:

  fragment UserAvatarUnprotected on User @throwOnFieldError {
    avatar
    avatarUrl
  }


=== GraphQL String 3 ===
Line: 18
Content:

  fragment UserDetailsUnprotected on User {
    ...UserBasicInfoUnprotected
    ...UserAvatarUnprotected
    bio
  }


=== GraphQL String 4 ===
Line: 26
Content:

  query GetFullUserUnprotected($id: ID!) {
    user(id: $id) {
      ...UserDetailsUnprotected
    }
  }


---

File: fixtures/invalid/unprotected_required_throw.ts
GraphQL strings found: 3

=== GraphQL String 1 ===
Line: 4
Content:

  query GetUserUnprotected($id: ID!) {
    user(id: $id) {
      id
      name @required(action: THROW)
      email
    }
  }


=== GraphQL String 2 ===
Line: 15
Content:

  query GetUserPartial($id: ID!) {
    user(id: $id) @catch {
      id
      name @required(action: THROW)  # ✅ Protected
      email
    }
    otherUser: user(id: "other") {
      name @required(action: THROW)  # ❌ Unprotected
    }
  }


=== GraphQL String 3 ===
Line: 29
Content:

  query GetUserMixedUnprotected($id: ID!) {
    user(id: $id) {
      id
      name @required(action: THROW)  # ❌ Unprotected
      avatar @throwOnFieldError      # ❌ Unprotected
    }
  }
