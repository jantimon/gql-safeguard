---
source: lib/src/registry.rs
expression: formatted
---
GraphQL Registry
├── Queries (3)
|   ├── GetFullUser (fixtures/valid/nested_fragments_protected.ts)
|   |   ├── Fields:
|   |   |   └── user
|   |   └── Fragment Spreads:
|   |       └── UserDetails
|   ├── GetUserProfile (fixtures/valid/query_with_catch.tsx)
|   |   ├── Directives:
|   |   |   └── Catch 🧤
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── name
|   |       ├── avatar [ThrowOnFieldError ⚠️]
|   |       └── email
|   └── GetUserWithRiskyData (fixtures/valid/fragment_level_catch.ts)
|       ├── Directives:
|       |   └── Catch 🧤
|       ├── Fields:
|       |   ├── user
|       |   ├── id
|       |   ├── name
|       |   └── friends [ThrowOnFieldError ⚠️]
|       └── Fragment Spreads:
|           └── RiskyUserData
└── Fragments (6)
    ├── RiskyUserData (fixtures/valid/fragment_level_catch.ts)
    |   ├── Directives:
    |   |   └── Catch 🧤
    |   └── Fields:
    |       ├── sensitiveInfo [ThrowOnFieldError ⚠️]
    |       ├── backupEmail [ThrowOnFieldError ⚠️]
    |       └── internalId
    ├── UserAvatar (fixtures/valid/nested_fragments_protected.ts)
    |   ├── Directives:
    |   |   └── Catch 🧤
    |   ├── Fields:
    |   |   └── avatar
    |   └── Fragment Spreads:
    |       └── avatarImage
    ├── UserBasicInfo (fixtures/valid/nested_fragments_protected.ts)
    |   └── Fields:
    |       ├── id
    |       ├── name
    |       └── email
    ├── UserBio (fixtures/valid/nested_fragments_protected.ts)
    |   └── Fields:
    |       ├── bioText
    |       └── bioImage [ThrowOnFieldError ⚠️]
    ├── UserDetails (fixtures/valid/nested_fragments_protected.ts)
    |   ├── Fields:
    |   |   ├── details [Catch 🧤]
    |   |   └── bio [ThrowOnFieldError ⚠️]
    |   └── Fragment Spreads:
    |       ├── UserBasicInfo
    |       ├── UserAvatar
    |       └── UserBio
    └── avatarImage (fixtures/valid/nested_fragments_protected.ts)
        ├── Directives:
        |   └── ThrowOnFieldError ⚠️
        └── Fields:
            ├── avatar
            └── avatarUrl
