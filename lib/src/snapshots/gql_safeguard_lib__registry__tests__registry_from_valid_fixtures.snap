---
source: lib/src/registry.rs
expression: formatted
---
GraphQL Registry
├── Queries (9)
|   ├── GetFullUser (fixtures/valid/nested_fragments_protected.ts)
|   |   ├── Fields:
|   |   |   └── user
|   |   └── Fragment Spreads:
|   |       └── UserDetails
|   ├── GetUserBasic (fixtures/valid/required_throw.ts)
|   |   ├── Directives:
|   |   |   └── Catch 🧤
|   |   └── Fields:
|   |       ├── email [RequiredThrow ☄️]
|   |       ├── id
|   |       ├── name [RequiredThrow ☄️]
|   |       └── user
|   ├── GetUserFieldCatch (fixtures/valid/ignore_comments.ts)
|   |   └── Fields:
|   |       ├── avatar
|   |       ├── id
|   |       ├── name
|   |       ├── user
|   |       └── user
|   ├── GetUserFieldIgnoreWithFragment (fixtures/valid/ignore_comments.ts)
|   |   ├── Fields:
|   |   |   └── user
|   |   └── Fragment Spreads:
|   |       └── userFieldsWithIgnore
|   ├── GetUserMixed (fixtures/valid/required_throw.ts)
|   |   ├── Directives:
|   |   |   └── Catch 🧤
|   |   └── Fields:
|   |       ├── avatar [ThrowOnFieldError ☄️]
|   |       ├── email [RequiredThrow ☄️]
|   |       ├── id
|   |       ├── name [RequiredThrow ☄️]
|   |       └── user
|   ├── GetUserNested (fixtures/valid/required_throw.ts)
|   |   └── Fields:
|   |       ├── avatar
|   |       ├── bio [RequiredThrow ☄️]
|   |       ├── displayName [RequiredThrow ☄️]
|   |       ├── id
|   |       ├── profile [Catch 🧤]
|   |       ├── url [ThrowOnFieldError ☄️]
|   |       └── user
|   ├── GetUserProfile (fixtures/valid/query_with_catch.tsx)
|   |   ├── Directives:
|   |   |   └── Catch 🧤
|   |   └── Fields:
|   |       ├── avatar [ThrowOnFieldError ☄️]
|   |       ├── email
|   |       ├── id
|   |       ├── name
|   |       └── user
|   ├── GetUserProfileFieldCatch (fixtures/valid/required_throw.ts)
|   |   └── Fields:
|   |       ├── avatar [RequiredThrow ☄️]
|   |       ├── bio
|   |       ├── id
|   |       ├── name [RequiredThrow ☄️]
|   |       └── user [Catch 🧤]
|   └── GetUserWithRiskyData (fixtures/valid/fragment_level_catch.ts)
|       ├── Directives:
|       |   └── Catch 🧤
|       ├── Fields:
|       |   ├── friends [ThrowOnFieldError ☄️]
|       |   ├── id
|       |   ├── name
|       |   └── user
|       └── Fragment Spreads:
|           └── RiskyUserData
└── Fragments (7)
    ├── RiskyUserData (fixtures/valid/fragment_level_catch.ts)
    |   ├── Directives:
    |   |   └── Catch 🧤
    |   └── Fields:
    |       ├── backupEmail [ThrowOnFieldError ☄️]
    |       ├── internalId
    |       └── sensitiveInfo [ThrowOnFieldError ☄️]
    ├── UserAvatar (fixtures/valid/nested_fragments_protected.ts)
    |   ├── Directives:
    |   |   └── Catch 🧤
    |   ├── Fields:
    |   |   └── avatar
    |   └── Fragment Spreads:
    |       └── avatarImage
    ├── UserBasicInfo (fixtures/valid/nested_fragments_protected.ts)
    |   └── Fields:
    |       ├── email
    |       ├── id
    |       └── name
    ├── UserBio (fixtures/valid/nested_fragments_protected.ts)
    |   └── Fields:
    |       ├── bioImage [ThrowOnFieldError ☄️]
    |       └── bioText
    ├── UserDetails (fixtures/valid/nested_fragments_protected.ts)
    |   ├── Fields:
    |   |   ├── bio [ThrowOnFieldError ☄️]
    |   |   └── details [Catch 🧤]
    |   └── Fragment Spreads:
    |       ├── UserAvatar
    |       ├── UserBasicInfo
    |       └── UserBio
    ├── avatarImage (fixtures/valid/nested_fragments_protected.ts)
    |   ├── Directives:
    |   |   └── ThrowOnFieldError ☄️
    |   └── Fields:
    |       ├── avatar
    |       └── avatarUrl
    └── userFieldsWithIgnore (fixtures/valid/ignore_comments.ts)
        └── Fields:
            ├── id
            └── name
