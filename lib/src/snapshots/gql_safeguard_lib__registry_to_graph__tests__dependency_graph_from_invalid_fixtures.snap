---
source: lib/src/registry_to_graph.rs
expression: formatted
---
Dependency Graph
├── GetFullUserUnprotected (fixtures/invalid/unprotected_nested.ts)
|   └── Selections:
|       └── Field: user
|           └── Fragment: UserDetailsUnprotected
|               ├── Fragment: UserBasicInfoUnprotected
|               |   ├── Field: id
|               |   ├── Field: name [ThrowOnFieldError ☄️]
|               |   └── Field: email
|               ├── Fragment: UserAvatarUnprotected [ThrowOnFieldError ☄️]
|               |   ├── Field: avatar
|               |   └── Field: avatarUrl
|               └── Field: bio
├── GetUserMixedUnprotected (fixtures/invalid/unprotected_required_throw.ts)
|   └── Selections:
|       └── Field: user
|           ├── Field: id
|           ├── Field: name [RequiredThrow ☄️]
|           └── Field: avatar [ThrowOnFieldError ☄️]
├── GetUserPartial (fixtures/invalid/unprotected_required_throw.ts)
|   └── Selections:
|       ├── Field: user [Catch 🧤]
|       |   ├── Field: id
|       |   ├── Field: name [RequiredThrow ☄️]
|       |   └── Field: email
|       └── Field: otherUser
|           └── Field: name [RequiredThrow ☄️]
├── GetUserProfileUnprotected (fixtures/invalid/missing_catch.tsx)
|   └── Selections:
|       └── Field: user
|           ├── Field: id
|           ├── Field: name
|           ├── Field: avatar [ThrowOnFieldError ☄️]
|           └── Field: email
├── GetUserUnprotected (fixtures/invalid/unprotected_required_throw.ts)
|   └── Selections:
|       └── Field: user
|           ├── Field: id
|           ├── Field: name [RequiredThrow ☄️]
|           └── Field: email
├── MixedQuery (fixtures/invalid/partial_protection.ts)
|   └── Selections:
|       └── Field: user
|           ├── Field: id
|           ├── Fragment: ProtectedFragment [Catch 🧤]
|           |   ├── Field: sensitiveData [ThrowOnFieldError ☄️]
|           |   └── Field: otherData
|           └── Fragment: UnprotectedFragment
|               ├── Field: riskyField [ThrowOnFieldError ☄️]
|               └── Field: normalField
├── queryLevelThrowWithIgnore (fixtures/invalid/query_level_throw_with_ignore.ts)
|   ├── Directives:
|   |   └── ThrowOnFieldError ☄️
|   └── Selections:
|       └── Field: customerOrderProductLineItemsGroupById
|           └── Field: startWrongDeliveryRegistrationRelativeUrl
├── queryLevelThrowWithQueryIgnore (fixtures/invalid/query_level_throw_with_ignore.ts)
|   ├── Directives:
|   |   └── ThrowOnFieldError ☄️
|   └── Selections:
|       └── Field: user
|           ├── Field: id
|           └── Field: name
└── unprotectedQueryLevelThrow (fixtures/invalid/query_level_throw_with_ignore.ts)
    ├── Directives:
    |   └── ThrowOnFieldError ☄️
    └── Selections:
        └── Field: user
            ├── Field: id
            ├── Field: name
            └── Field: email
