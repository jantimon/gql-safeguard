---
source: lib/src/registry.rs
expression: formatted
---
GraphQL Registry
├── Queries (4)
|   ├── GetFullUserUnprotected (fixtures/invalid/unprotected_nested.ts)
|   |   ├── Fields:
|   |   |   └── user
|   |   └── Fragment Spreads:
|   |       └── UserDetailsUnprotected
|   ├── GetUserProfileUnprotected (fixtures/invalid/missing_catch.tsx)
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── name
|   |       ├── avatar [ThrowOnFieldError ☄️]
|   |       └── email
|   ├── GetUserUnprotected (fixtures/invalid/unprotected_required_throw.ts)
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── name [RequiredThrow ☄️]
|   |       └── email
|   └── MixedQuery (fixtures/invalid/partial_protection.ts)
|       ├── Fields:
|       |   ├── user
|       |   └── id
|       └── Fragment Spreads:
|           ├── ProtectedFragment
|           └── UnprotectedFragment
└── Fragments (5)
    ├── ProtectedFragment (fixtures/invalid/partial_protection.ts)
    |   ├── Directives:
    |   |   └── Catch 🧤
    |   └── Fields:
    |       ├── sensitiveData [ThrowOnFieldError ☄️]
    |       └── otherData
    ├── UnprotectedFragment (fixtures/invalid/partial_protection.ts)
    |   └── Fields:
    |       ├── riskyField [ThrowOnFieldError ☄️]
    |       └── normalField
    ├── UserAvatarUnprotected (fixtures/invalid/unprotected_nested.ts)
    |   ├── Directives:
    |   |   └── ThrowOnFieldError ☄️
    |   └── Fields:
    |       ├── avatar
    |       └── avatarUrl
    ├── UserBasicInfoUnprotected (fixtures/invalid/unprotected_nested.ts)
    |   └── Fields:
    |       ├── id
    |       ├── name [ThrowOnFieldError ☄️]
    |       └── email
    └── UserDetailsUnprotected (fixtures/invalid/unprotected_nested.ts)
        ├── Fields:
        |   └── bio
        └── Fragment Spreads:
            ├── UserBasicInfoUnprotected
            └── UserAvatarUnprotected
