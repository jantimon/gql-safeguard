---
source: lib/src/registry.rs
expression: formatted
---
GraphQL Registry
├── Queries (11)
|   ├── AdditionalQueryEdgeCase (fixtures/edge_cases/additional-queries.ts)
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       └── importedField [ThrowOnFieldError ☄️]
|   ├── BaseQueryDynamic (fixtures/edge_cases/dynamic_imports.tsx)
|   |   ├── Directives:
|   |   |   └── Catch 🧤
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── name
|   |       └── dynamicField [ThrowOnFieldError ☄️]
|   ├── CircularQueryTest (fixtures/edge_cases/circular_fragments.ts)
|   |   ├── Fields:
|   |   |   └── user
|   |   └── Fragment Spreads:
|   |       └── FragmentACircular
|   ├── GetUserComplex (fixtures/edge_cases/required_variants.ts)
|   |   ├── Directives:
|   |   |   └── Catch 🧤
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── profile
|   |       ├── name
|   |       ├── displayName [RequiredThrow ☄️]
|   |       ├── avatar [ThrowOnFieldError ☄️]
|   |       ├── bio [Catch 🧤]
|   |       ├── text [RequiredThrow ☄️]
|   |       └── lastModified
|   ├── GetUserLogAction (fixtures/edge_cases/required_variants.ts)
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── name
|   |       └── email [RequiredThrow ☄️, Catch 🧤]
|   ├── GetUserNoAction (fixtures/edge_cases/required_variants.ts)
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── name
|   |       └── email [RequiredThrow ☄️, Catch 🧤]
|   ├── GetUserOtherActions (fixtures/edge_cases/required_variants.ts)
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       ├── name
|   |       ├── email
|   |       └── bio [RequiredThrow ☄️, Catch 🧤]
|   ├── GetUserWithFragment (fixtures/edge_cases/required_variants.ts)
|   |   ├── Fields:
|   |   |   ├── user [Catch 🧤]
|   |   |   └── id
|   |   └── Fragment Spreads:
|   |       └── UserInfo
|   ├── GraphQLQuery (fixtures/edge_cases/additional-queries.ts)
|   |   ├── Directives:
|   |   |   └── Catch 🧤
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       └── protectedField [ThrowOnFieldError ☄️]
|   ├── StaticDynamicQueryEdge (fixtures/edge_cases/dynamic_imports.tsx)
|   |   └── Fields:
|   |       ├── user
|   |       ├── id
|   |       └── dynamicField [ThrowOnFieldError ☄️]
|   └── ValidQueryCommented (fixtures/edge_cases/commented_graphql.ts)
|       ├── Directives:
|       |   └── Catch 🧤
|       └── Fields:
|           ├── user
|           ├── id
|           ├── name
|           └── avatar [ThrowOnFieldError ☄️]
└── Fragments (3)
    ├── FragmentACircular (fixtures/edge_cases/circular_fragments.ts)
    |   ├── Fields:
    |   |   ├── id
    |   |   └── name
    |   └── Fragment Spreads:
    |       └── FragmentBCircular
    ├── FragmentBCircular (fixtures/edge_cases/circular_fragments.ts)
    |   ├── Fields:
    |   |   ├── email
    |   |   └── bio
    |   └── Fragment Spreads:
    |       └── FragmentACircular
    └── UserInfo (fixtures/edge_cases/required_variants.ts)
        └── Fields:
            ├── name
            ├── email [RequiredThrow ☄️]
            └── avatar [ThrowOnFieldError ☄️]
